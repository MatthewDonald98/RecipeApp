{"version":3,"sources":["components/navbar.component.js","components/recipes-list.component.js","components/edit-recipe.component.js","components/create-recipe.component.js","components/create-user.component.js","components/about-page.component.js","components/register-page.component.js","components/login-page.component.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","Component","Recipe","props","recipe","username","name","ingredients","description","timeToCook","date","substring","_id","href","onClick","deleteRecipe","RecipesList","bind","state","recipes","axios","get","then","response","setState","data","catch","error","console","log","id","delete","res","this","filter","el","map","currentrecipe","key","class","recipeList","EditRecipe","onChangeUsername","onChangeName","onChangeIngredients","onChangeDescription","onChangeTimeToCook","onChangeDate","onSubmit","Date","users","match","params","user","e","target","value","preventDefault","post","window","location","ref","onChange","type","required","selected","CreateRecipe","length","CreateUser","newUser","AboutPage","RegisterPage","LoginPage","App","path","exact","component","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.f2444ecf.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default class Navbar extends Component {\n\n  render() {\n    return (\n      <nav className=\"navbar navbar-dark bg-dark navbar-expand-lg\">\n        <Link to=\"/\" className=\"navbar-brand\">RecipeBook</Link>\n        <div className=\"collpase navbar-collapse\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"navbar-item\">\n          <Link to=\"/\" className=\"nav-link\">Recipes</Link>\n          </li>\n          <li className=\"navbar-item\">\n          <Link to=\"/create\" className=\"nav-link\">Create New Recipe</Link>\n          </li>\n          <li className=\"navbar-item\">\n          <Link to=\"/user\" className=\"nav-link\">Create User</Link>\n          </li>\n          <li className=\"navbar-item\">\n          <Link to=\"/about\" className=\"nav-link\">About</Link>\n          </li>\n        </ul>\n        <ul className=\"navbar-nav ml-auto\">\n        <li className=\"navbar-item\">\n          <Link to=\"/register\" className=\"nav-link\">Register</Link>\n          </li>\n          <li className=\"navbar-item\">\n          <Link to=\"/login\" className=\"nav-link\">Login</Link>\n          </li>\n        </ul>\n        </div>\n      </nav>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Recipe = props => (\n    <tr>\n      <td>{props.recipe.username}</td>\n      <td>{props.recipe.name}</td>\n      <td>{props.recipe.ingredients}</td>\n      <td>{props.recipe.description}</td>\n      <td>{props.recipe.timeToCook}</td>\n      <td>{props.recipe.date.substring(0,10)}</td>\n      <td>\n        <Link to={\"/edit/\"+props.recipe._id}>Edit</Link> | <a href=\"#\" onClick={() => { props.deleteRecipe(props.recipe._id) }}>Delete</a>\n      </td>\n    </tr>\n  )\n\nexport default class RecipesList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.deleteRecipe = this.deleteRecipe.bind(this);\n        this.state = {recipes: []};\n      }\n      //http://localhost:5000/recipes/\n\n      componentDidMount() {\n        axios.get('/recipes/')\n         .then(response => {\n           this.setState({ recipes: response.data });\n         })\n         .catch((error) => {\n            console.log(error);\n         })\n      }\n//        axios.delete('http://localhost:5000/recipes/'+id)\n\n      deleteRecipe(id) {\n        axios.delete('/recipes/'+id)\n          .then(res => console.log(res.data));\n        this.setState({\n          recipes: this.state.recipes.filter(el => el._id !== id)\n        })\n      }\n\n      recipeList() {\n        return this.state.recipes.map(currentrecipe => {\n          return <Recipe recipe={currentrecipe} deleteRecipe={this.deleteRecipe} key={currentrecipe._id}/>;\n        })\n      }\n\n  render() {\n    return (\n        <div>\n          <div class=\"jumbotron jumbotron-fluid\">\n        <div class=\"container\">\n          <h1 class=\"display-4\">Recipe Page</h1>\n          <h2 class=\"lead\">This page contains the recipes created by users and is used \n          to  to store and modify recipes </h2>\n        </div>\n      </div>\n        <table className=\"table\">\n          <thead className=\"thead-light\">\n            <tr>\n              <th>User</th>\n              <th>Name</th>\n              <th>Ingredients</th>\n              <th>Description</th>\n              <th>Time To Cook (minutes)</th>\n              <th>Date</th>\n              <th>Modify</th>\n            </tr>\n          </thead>\n          <tbody>\n            { this.recipeList() }\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\n\nexport default class EditRecipe extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeName = this.onChangeName.bind(this);\n    this.onChangeIngredients = this.onChangeIngredients.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.onChangeTimeToCook = this.onChangeTimeToCook.bind(this);\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      username: '',\n      name: '',\n      ingredients: '',\n      description: '',\n      timeToCook: 0,\n      date: new Date(),\n      users: []\n    }\n  }\n//    axios.get('http://localhost:5000/recipes/'+this.props.match.params.id)\n\n  componentDidMount() {\n    axios.get('/recipes/'+this.props.match.params.id)\n      .then(response => {\n        this.setState({\n          username: response.data.username,   \n          name: response.data.name,                 \n          ingredients: response.data.ingredients,\n          description: response.data.description,\n          timeToCook: response.data.timeToCook,\n          date: new Date(response.data.date)\n        })   \n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      //    axios.get('http://localhost:5000/users/')\n\n\n      axios.get('/users/')\n      .then(response => {\n        this.setState({ users: response.data.map(user => user.username) });\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangeName(e) {\n    this.setState({\n      name: e.target.value\n    });\n  }\n\n  onChangeIngredients(e) {\n    this.setState({\n      ingredients: e.target.value\n    });\n  }\n\n  onChangeDescription(e) {\n    this.setState({\n      description: e.target.value\n    });\n  }\n\n  onChangeTimeToCook(e) {\n    this.setState({\n      timeToCook: e.target.value\n    });\n  }\n\n  onChangeDate(date) {\n    this.setState({\n      date: date\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const recipe = {\n      username: this.state.username,\n      name: this.state.name,\n      ingredients: this.state.ingredients,\n      description: this.state.description,\n      timeToCook: this.state.timeToCook,\n      date: this.state.date,\n    };\n\n    console.log(recipe);\n\n    //    axios.post('http://localhost:5000/recipes/update/'+this.props.match.params.id, recipe)\n\n\n    axios.post('/recipes/update/'+this.props.match.params.id, recipe)\n      .then(res => console.log(res.data));\n    \n    window.location = '/';\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Edit Recipe</h3>\n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\"> \n            <label>Username: </label>\n            <select ref=\"userInput\"\n                className=\"form-control\"\n                value={this.state.username}\n                onChange={this.onChangeUsername}>\n                {\n                  this.state.users.map(function(user) {\n                    return <option \n                      key={user}\n                      value={user}>{user}\n                      </option>;\n                  })\n                }\n            </select>\n          </div>\n          <div className=\"form-group\"> \n            <label>Name: </label>\n            <input  type=\"text\"\n                required\n                className=\"form-control\"\n                value={this.state.name}\n                onChange={this.onChangeName}\n                />\n          </div>\n          <div className=\"form-group\"> \n            <label>Ingredients: </label>\n            <input  type=\"text\"\n                required\n                className=\"form-control\"\n                value={this.state.ingredients}\n                onChange={this.onChangeIngredients}\n                />\n          </div>\n          <div className=\"form-group\"> \n            <label>Description: </label>\n            <input  type=\"text\"\n                required\n                className=\"form-control\"\n                value={this.state.description}\n                onChange={this.onChangeDescription}\n                />\n          </div>\n          <div className=\"form-group\">\n            <label>Time to Cook (in minutes): </label>\n            <input \n                type=\"text\" \n                className=\"form-control\"\n                value={this.state.timeToCook}\n                onChange={this.onChangeTimeToCook}\n                />\n          </div>\n          <div className=\"form-group\">\n            <label>Date: </label>\n            <DatePicker\n              selected={this.state.date}\n              onChange={this.onChangeDate}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <input type=\"submit\" value=\"Edit Recipe\" className=\"btn btn-primary\" />\n          </div>\n        </form>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport axios from 'axios';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default class CreateRecipe extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeName = this.onChangeName.bind(this);\n    this.onChangeIngredients = this.onChangeIngredients.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.onChangeTimeToCook = this.onChangeTimeToCook.bind(this);\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      username: '',\n      name: '',\n      ingredients: '',\n      description: '',\n      timeToCook: 0,\n      date: new Date(),\n      users: []\n    }\n  }\n  // http://localhost:5000/users/\n\n  componentDidMount() {\n    axios.get('/users/')\n        .then(response => {\n         if (response.data.length > 0) {\n        this.setState({ \n        users: response.data.map(user => user.username),\n        username: response.data[0].username\n      });\n    }\n  })\n  .catch((error) => {\n    console.log(error);\n  })\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n}\n\nonChangeName(e) {\n  this.setState({\n    name: e.target.value\n  });\n}\n\nonChangeIngredients(e) {\n    this.setState({\n      ingredients: e.target.value\n    });\n  }\n\nonChangeDescription(e) {\n  this.setState({\n    description: e.target.value\n  });\n}\n\nonChangeTimeToCook(e) {\n  this.setState({\n    timeToCook: e.target.value\n  });\n}\n\nonChangeDate(date) {\n  this.setState({\n    date: date\n  });\n}\n\nonSubmit(e) {\n  e.preventDefault();\n\n  const recipe = {\n    username: this.state.username,\n    name: this.state.name,\n    ingredients: this.state.ingredients,\n    description: this.state.description,\n    timeToCook: this.state.timeToCook,\n    date: this.state.date,\n  };\n//  axios.post('http://localhost:5000/recipes/add', recipe)\n\n  console.log(recipe);\n  axios.post('/recipes/add', recipe)\n  .then(res => console.log(res.data));\n  \n  window.location = '/';\n}\nrender() {\n    return (\n      <div>\n        <div class=\"jumbotron jumbotron-fluid\">\n          <div class=\"container\">\n            <h1 class=\"display-4\">Add a new Recipe</h1>\n           <h2 class=\"lead\">Fill in the information below to add a new recipe to the book</h2>\n         </div>\n        </div>\n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\"> \n            <label>Username: </label>\n            <select ref=\"userInput\"\n                required\n                className=\"form-control\"\n                value={this.state.username}\n                onChange={this.onChangeUsername}>\n                {\n                  this.state.users.map(function(user) {\n                    return <option \n                      key={user}\n                      value={user}>{user}\n                      </option>;\n                  })\n                }\n            </select>\n          </div>\n          <div className=\"form-group\"> \n            <label>Name: </label>\n            <input  type=\"text\"\n                required\n                className=\"form-control\"\n                value={this.state.name}\n                onChange={this.onChangeName}\n                />\n          </div>\n          <div className=\"form-group\"> \n            <label>Ingredients: </label>\n            <input  type=\"text\"\n                required\n                className=\"form-control\"\n                value={this.state.ingredients}\n                onChange={this.onChangeIngredients}\n                />\n          </div>\n          <div className=\"form-group\"> \n            <label>Description: </label>\n            <input  type=\"text\"\n                required\n                className=\"form-control\"\n                value={this.state.description}\n                onChange={this.onChangeDescription}\n                />\n          </div>\n          <div className=\"form-group\">\n            <label>Time to Cook (in minutes): </label>\n            <input \n             type=\"text\" \n             className=\"form-control\"\n             value={this.state.timeToCook}\n             onChange={this.onChangeTimeToCook}\n             />\n       </div>\n       <div className=\"form-group\">\n         <label>Date: </label>\n         <div>\n           <DatePicker\n             selected={this.state.date}\n             onChange={this.onChangeDate}\n           />\n         </div>\n       </div>\n\n       <div className=\"form-group\">\n         <input type=\"submit\" value=\"Add New Recipe\" className=\"btn btn-primary\" />\n       </div>\n     </form>\n   </div>\n )\n}\n}","import React, { Component } from 'react';\nimport axios from 'axios';\n\nexport default class CreateUser extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangeUsername = this.onChangeUsername.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n          username: ''\n        };\n      }\n\n      onChangeUsername(e) {\n        this.setState({\n          username: e.target.value\n        });\n      }\n      onSubmit(e) {\n        e.preventDefault();\n        const newUser = {\n          username: this.state.username,\n        };\n        //        axios.post('http://localhost:5000/users/add', newUser)\n\n        console.log(newUser);\n        axios.post('/users/add', newUser)\n         .then(res => console.log(res.data));\n        \n        this.setState({\n          username: ''\n        })\n      }\n\n  render() {\n    return (\n        <div>\n        <div class=\"jumbotron jumbotron-fluid\">\n        <div class=\"container\">\n          <h1 class=\"display-4\">Create User Page</h1>\n          <h2 class=\"lead\">This page is for the user to enter their name</h2>\n        </div>\n      </div>\n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\"> \n            <label>Username: </label>\n            <input  type=\"text\"\n                required\n                className=\"form-control\"\n                value={this.state.username}\n                onChange={this.onChangeUsername}\n                />\n          </div>\n          <div className=\"form-group\">\n            <input type=\"submit\" value=\"Create User\" className=\"btn btn-primary\" />\n          </div>\n        </form>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\n\nexport default class AboutPage extends Component {\n  render() {\n    return (\n        <div>\n        <div class=\"jumbotron jumbotron-fluid\">\n        <div class=\"container\">\n          <h1 class=\"display-4\">About Page</h1>\n          <h2 class=\"lead\">This page contains info about the app</h2>\n        </div>\n      </div>\n      <p>\n         The application is built to create an online recipe book that anyone can add to or edit. The application is developed using the MERN stack\n         and deployed on Heroku. The register and login pages are created however do not have any underlying functionality as of yet, so to \n         add a user to the datatase the add user section is used. From here, a user can be selected in the create recipe tab and a recipe added\n         to the database under the username. The added recipes can be viewed under the homepage or the recipe tabe where they can \n         be edited or deleted.\n      </p>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\n\nexport default class RegisterPage extends Component {\n  render() {\n    return (\n        <div>\n        <div class=\"jumbotron jumbotron-fluid\">\n        <div class=\"container\">\n          <h1 class=\"display-4\">Register Page</h1>\n          <h2 class=\"lead\">This page is for the user to register an account</h2>\n        </div>\n      </div>\n      <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\"> \n            <label> First Name: </label>\n            <input  type=\"text\"\n                required\n                className=\"form-control\"\n                />\n          </div>\n          <div className=\"form-group\"> \n            <label> Last Name: </label>\n            <input  type=\"text\"\n                required\n                className=\"form-control\"\n                />\n          </div>\n          <div className=\"form-group\"> \n            <label> Username: </label>\n            <input  type=\"text\"\n                required\n                className=\"form-control\"\n                />\n          </div>\n          <div className=\"form-group\"> \n            <label> Password: </label>\n            <input  type=\"password\"\n                required\n                className=\"form-control\"\n                />\n          </div>\n          <div className=\"form-group\"> \n            <label> Confirm Password: </label>\n            <input  type=\"password\"\n                required\n                className=\"form-control\"\n                />\n          </div>\n          <div className=\"form-group\"> \n            <label> Email: </label>\n            <input  type=\"text\"\n                required\n                className=\"form-control\"\n                />\n          </div>\n\n       <div className=\"form-group\">\n         <input type=\"submit\" value=\"Create Profile\" className=\"btn btn-primary\" />\n       </div>\n     </form>\n      \n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\n\nexport default class LoginPage extends Component {\n  render() {\n    return (\n        <div>\n       <div class=\"jumbotron jumbotron-fluid\">\n        <div class=\"container\">\n          <h1 class=\"display-4\">Login Page</h1>\n          <h2 class=\"lead\">This page is for the user to login to their account</h2>\n        </div>\n      </div>\n      <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\"> \n            <label> Username: </label>\n            <input  type=\"text\"\n                required\n                className=\"form-control\"\n                />\n          </div>\n          <div className=\"form-group\"> \n            <label> Password: </label>\n            <input  type=\"password\"\n                required\n                className=\"form-control\"\n                />\n          </div>\n        </form>\n      </div>\n    )\n  }\n}","import React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport Navbar from \"./components/navbar.component\"\nimport RecipesList from \"./components/recipes-list.component.js\";\nimport EditRecipe from \"./components/edit-recipe.component\";\nimport CreateRecipe from \"./components/create-recipe.component\";\nimport CreateUser from \"./components/create-user.component\";\nimport AboutPage from \"./components/about-page.component\";\nimport RegisterPage from \"./components/register-page.component.js\";\nimport LoginPage from \"./components/login-page.component.js\";\n\n \nfunction App() {\n  return (\n    <Router>\n      <div className=\"container\">\n      <Navbar />\n        <br/>\n        <Route path=\"/\" exact component={RecipesList} />\n        <Route path=\"/edit/:id\" component={EditRecipe} />\n        <Route path=\"/create\" component={CreateRecipe} />\n        <Route path=\"/user\" component={CreateUser} />\n        <Route path=\"/about\" component={AboutPage} />\n        <Route path=\"/register\" component={RegisterPage} />\n        <Route path=\"/login\" component={LoginPage} />\n\n      </div>\n    </Router>\n  );\n }\n \nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}